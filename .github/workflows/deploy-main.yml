name: Deploy

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - '.github/workflows/pto-frontend-container.yml'
      - 'nais-dev.yaml'
      - 'nais-prod.yaml'

concurrency:
  group: deploy
  cancel-in-progress: true

jobs:
  deploy-dev:
    name: Deploy application to dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test
      - name: Build application
        run: npm run build
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCS_SA_KEY_DEV }}
          export_default_credentials: true
      - name: Upload files to GCS
        run: gsutil -m rsync -r build gs://start-samtale-dev
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release/dev@${{ github.sha }}
          release_name: dev
          prerelease: true

  deploy-prod:
    name: Deploy application to prod
    needs: deploy-dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test
      - name: Build application
        run: npm run build
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCS_SA_KEY_PROD }}
          export_default_credentials: true
      - name: Upload files to GCS
        run: gsutil -m rsync -r build gs://start-samtale-prod
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release/prod@${{ github.sha }}
          release_name: prod
          prerelease: true
